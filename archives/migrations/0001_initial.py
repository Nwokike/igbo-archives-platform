# Generated by Django 4.2.25 on 2025-10-30 14:39

import archives.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Archive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Required: Archive title', max_length=255)),
                ('description', models.TextField(help_text='Required: Detailed description (plain text)')),
                ('archive_type', models.CharField(choices=[('image', 'Image'), ('video', 'Video'), ('document', 'Document'), ('audio', 'Audio')], help_text='Required: Type of archive', max_length=20)),
                ('image', models.ImageField(blank=True, help_text='For image-type archives', null=True, upload_to='archives/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'webp']), archives.models.validate_image_size])),
                ('video', models.FileField(blank=True, help_text='For video-type archives (max 50MB)', null=True, upload_to='archives/videos/', validators=[django.core.validators.FileExtensionValidator(['mp4', 'webm', 'ogg', 'mov']), archives.models.validate_video_size])),
                ('document', models.FileField(blank=True, help_text='For document-type archives (max 5MB)', null=True, upload_to='archives/documents/', validators=[django.core.validators.FileExtensionValidator(['pdf', 'doc', 'docx', 'txt']), archives.models.validate_document_size])),
                ('audio', models.FileField(blank=True, help_text='For audio-type archives (max 5MB)', null=True, upload_to='archives/audio/', validators=[django.core.validators.FileExtensionValidator(['mp3', 'wav', 'ogg', 'm4a']), archives.models.validate_audio_size])),
                ('featured_image', models.ImageField(blank=True, help_text='Thumbnail for videos/audio (optional)', null=True, upload_to='archives/featured/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'webp']), archives.models.validate_image_size])),
                ('caption', models.CharField(blank=True, default='', help_text='Required: Caption with copyright/source information', max_length=500)),
                ('alt_text', models.CharField(blank=True, default='', help_text='Required for images: Alt text for accessibility', max_length=255)),
                ('original_author', models.CharField(blank=True, help_text='Optional: Original photographer/creator (e.g., Northcote Thomas)', max_length=255)),
                ('date_created', models.DateField(blank=True, help_text='Optional: Exact date if known', null=True)),
                ('circa_date', models.CharField(blank=True, help_text="Optional: Approximate date (e.g., 'c1910', 'around 1910s')", max_length=100)),
                ('location', models.CharField(blank=True, help_text='Optional: Where the photo/artifact was taken/found', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_approved', models.BooleanField(default=True, help_text='Admin approval status')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='archives.category')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='archives', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Archives',
                'ordering': ['-created_at'],
            },
        ),
    ]
