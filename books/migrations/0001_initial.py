# Generated by Django 4.2.25 on 2025-10-30 14:39

import books.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_editorjs_fields.fields
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BookReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_title', models.CharField(max_length=255)),
                ('author', models.CharField(help_text='Book author(s)', max_length=255)),
                ('isbn', models.CharField(blank=True, max_length=20)),
                ('publisher', models.CharField(blank=True, max_length=255)),
                ('publication_year', models.IntegerField(blank=True, null=True)),
                ('review_title', models.CharField(max_length=255)),
                ('slug', models.SlugField(unique=True)),
                ('content_json', django_editorjs_fields.fields.EditorJsJSONField(blank=True, help_text='Block-based review content using Editor.js', null=True)),
                ('legacy_content', models.TextField(blank=True, help_text='Legacy HTML content')),
                ('rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')])),
                ('cover_image', models.ImageField(blank=True, help_text='Primary book cover', null=True, upload_to='book_covers/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'webp']), books.models.validate_file_size])),
                ('cover_image_back', models.ImageField(blank=True, help_text='Back cover (optional)', null=True, upload_to='book_covers/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'webp']), books.models.validate_file_size])),
                ('alternate_cover', models.ImageField(blank=True, help_text='Alternate edition cover (optional)', null=True, upload_to='book_covers/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'webp']), books.models.validate_file_size])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_published', models.BooleanField(default=False)),
                ('is_approved', models.BooleanField(default=False)),
                ('pending_approval', models.BooleanField(default=False, help_text='Review is pending admin approval')),
                ('submitted_at', models.DateTimeField(blank=True, help_text='When review was submitted for approval', null=True)),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='book_reviews', to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
